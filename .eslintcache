[{"D:\\project-ecqv\\ecqv-master\\src\\index.js":"1","D:\\project-ecqv\\ecqv-master\\src\\reportWebVitals.js":"2","D:\\project-ecqv\\ecqv-master\\src\\App.js":"3","D:\\project-ecqv\\ecqv-master\\src\\pages\\Login.js":"4","D:\\project-ecqv\\ecqv-master\\src\\pages\\LandingPage.js":"5","D:\\project-ecqv\\ecqv-master\\src\\data\\ApolloClient.js":"6","D:\\project-ecqv\\ecqv-master\\src\\data\\queries.js":"7","D:\\project-ecqv\\ecqv-master\\src\\components\\Header.js":"8","D:\\project-ecqv\\ecqv-master\\src\\components\\Sider.js":"9","D:\\project-ecqv\\ecqv-master\\src\\components\\ListItems.js":"10","D:\\project-ecqv\\ecqv-master\\src\\pages\\Mainbar.js":"11","D:\\project-ecqv\\ecqv-master\\src\\pages\\OrderPage.js":"12","D:\\project-ecqv\\ecqv-master\\src\\pages\\Reports.js":"13","D:\\project-ecqv\\ecqv-master\\src\\pages\\Deposits.js":"14","D:\\project-ecqv\\ecqv-master\\src\\pages\\Orders.js":"15","D:\\project-ecqv\\ecqv-master\\src\\pages\\Title.js":"16","D:\\project-ecqv\\ecqv-master\\src\\pages\\Admin\\AdminPage.js":"17","D:\\project-ecqv\\ecqv-master\\src\\pages\\AdminLogin.js":"18","D:\\project-ecqv\\ecqv-master\\src\\pages\\Admin\\AdminSider.js":"19","D:\\project-ecqv\\ecqv-master\\src\\pages\\Admin\\userManagement.js":"20","D:\\project-ecqv\\ecqv-master\\src\\pages\\Admin\\UserManagement.js":"21","D:\\project-ecqv\\ecqv-master\\src\\pages\\Admin\\AdminMainbar.js":"22","D:\\project-ecqv\\ecqv-master\\src\\pages\\Admin\\UserList.js":"23","D:\\project-ecqv\\ecqv-master\\src\\pages\\Admin\\AddUser.js":"24","D:\\project-ecqv\\ecqv-master\\src\\pages\\Admin\\ModifyLogin.js":"25","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\index.js":"26","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\App.js":"27","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\reportWebVitals.js":"28","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\data\\ApolloClient.js":"29","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Login.js":"30","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\AdminPage.js":"31","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\LandingPage.js":"32","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\components\\Header.js":"33","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\AdminLogin.js":"34","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\AdminMainbar.js":"35","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\OrderPage.js":"36","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Mainbar.js":"37","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\AdminSider.js":"38","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\components\\Sider.js":"39","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Reports.js":"40","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Deposits.js":"41","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\UserManagement.js":"42","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Orders.js":"43","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\components\\ListItems.js":"44","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Title.js":"45","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\AddUser.js":"46","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\UserList.js":"47","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\ModifyLogin.js":"48","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\data\\queries.js":"49","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\RecoverUser.js":"50","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\EditUser.js":"51"},{"size":589,"mtime":1608994556424,"results":"52","hashOfConfig":"53"},{"size":362,"mtime":1608986745134,"results":"54","hashOfConfig":"53"},{"size":892,"mtime":1609158802829,"results":"55","hashOfConfig":"53"},{"size":3482,"mtime":1609158374707,"results":"56","hashOfConfig":"53"},{"size":996,"mtime":1609001721991,"results":"57","hashOfConfig":"53"},{"size":329,"mtime":1608986745191,"results":"58","hashOfConfig":"53"},{"size":198,"mtime":1608986745202,"results":"59","hashOfConfig":"53"},{"size":2535,"mtime":1609128007766,"results":"60","hashOfConfig":"53"},{"size":1039,"mtime":1609001774243,"results":"61","hashOfConfig":"53"},{"size":2273,"mtime":1609000721707,"results":"62","hashOfConfig":"53"},{"size":2689,"mtime":1608999909143,"results":"63","hashOfConfig":"53"},{"size":2743,"mtime":1608999888958,"results":"64","hashOfConfig":"53"},{"size":11857,"mtime":1608999941604,"results":"65","hashOfConfig":"53"},{"size":882,"mtime":1608999995585,"results":"66","hashOfConfig":"53"},{"size":2419,"mtime":1609000036704,"results":"67","hashOfConfig":"53"},{"size":358,"mtime":1609000084541,"results":"68","hashOfConfig":"53"},{"size":669,"mtime":1609378308243,"results":"69","hashOfConfig":"53"},{"size":3504,"mtime":1609378220973,"results":"70","hashOfConfig":"53"},{"size":3009,"mtime":1609378354263,"results":"71","hashOfConfig":"53"},{"size":3050,"mtime":1609167035153,"results":"72","hashOfConfig":"53"},{"size":4766,"mtime":1611108113333,"results":"73","hashOfConfig":"53"},{"size":1291,"mtime":1609758875358,"results":"74","hashOfConfig":"53"},{"size":11772,"mtime":1611108841287,"results":"75","hashOfConfig":"53"},{"size":3819,"mtime":1609775178832,"results":"76","hashOfConfig":"53"},{"size":12155,"mtime":1611283577157,"results":"77","hashOfConfig":"53"},{"size":589,"mtime":1611375586631,"results":"78","hashOfConfig":"79"},{"size":892,"mtime":1611375586629,"results":"80","hashOfConfig":"79"},{"size":362,"mtime":1611375560840,"results":"81","hashOfConfig":"79"},{"size":329,"mtime":1611375560838,"results":"82","hashOfConfig":"79"},{"size":3482,"mtime":1611375586636,"results":"83","hashOfConfig":"79"},{"size":634,"mtime":1611375586632,"results":"84","hashOfConfig":"79"},{"size":996,"mtime":1611375586635,"results":"85","hashOfConfig":"79"},{"size":2535,"mtime":1611375586630,"results":"86","hashOfConfig":"79"},{"size":3353,"mtime":1611375586634,"results":"87","hashOfConfig":"79"},{"size":1240,"mtime":1611375586631,"results":"88","hashOfConfig":"79"},{"size":2654,"mtime":1611375586636,"results":"89","hashOfConfig":"79"},{"size":2601,"mtime":1611375586636,"results":"90","hashOfConfig":"79"},{"size":2902,"mtime":1611375586633,"results":"91","hashOfConfig":"79"},{"size":1039,"mtime":1611375586630,"results":"92","hashOfConfig":"79"},{"size":11501,"mtime":1611375586637,"results":"93","hashOfConfig":"79"},{"size":847,"mtime":1611375586635,"results":"94","hashOfConfig":"79"},{"size":4648,"mtime":1611430835830,"results":"95","hashOfConfig":"79"},{"size":2351,"mtime":1611375586636,"results":"96","hashOfConfig":"79"},{"size":2192,"mtime":1611375586630,"results":"97","hashOfConfig":"79"},{"size":343,"mtime":1611375586637,"results":"98","hashOfConfig":"79"},{"size":6848,"mtime":1611399633924,"results":"99","hashOfConfig":"79"},{"size":11587,"mtime":1611433783464,"results":"100","hashOfConfig":"79"},{"size":12596,"mtime":1611428799998,"results":"101","hashOfConfig":"79"},{"size":2647,"mtime":1611430371404,"results":"102","hashOfConfig":"79"},{"size":11415,"mtime":1611430947853,"results":"103","hashOfConfig":"79"},{"size":7379,"mtime":1611490818673,"results":"104","hashOfConfig":"79"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"1s4nm97",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"107"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},"yhvm9y",{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"161"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"161"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"161"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"161"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"161"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\project-ecqv\\ecqv-master\\src\\index.js",[],["216","217"],"D:\\project-ecqv\\ecqv-master\\src\\reportWebVitals.js",[],"D:\\project-ecqv\\ecqv-master\\src\\App.js",[],"D:\\project-ecqv\\ecqv-master\\src\\pages\\Login.js",[],"D:\\project-ecqv\\ecqv-master\\src\\pages\\LandingPage.js",[],"D:\\project-ecqv\\ecqv-master\\src\\data\\ApolloClient.js",[],"D:\\project-ecqv\\ecqv-master\\src\\data\\queries.js",[],"D:\\project-ecqv\\ecqv-master\\src\\components\\Header.js",["218"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n   AppBar,\n   Toolbar,\n   Typography,\n   IconButton,\n   MenuItem,\n   Menu\n} from '@material-ui/core';\n\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport {Link} from 'react-router-dom'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n root: {\n   flexGrow: 1,\n\n },\n headColor:{\n   background: '#3949ab',\n   zIndex: theme.zIndex.drawer +1\n   /*253053*/\n },\n menuButton: {\n   marginRight: theme.spacing(2),\n },\n title: {\n   flexGrow: 1,\n }\n \n}));\n\nfunction Header() {\n const classes = useStyles();\n const [auth, setAuth] = React.useState(true);\n const [anchorEl, setAnchorEl] = React.useState(null);\n const open = Boolean(anchorEl);\n\n const handleChange = (event) => {\n   setAuth(event.target.onClick);\n };\n\n const handleMenu = (event) => {\n   setAnchorEl(event.currentTarget);\n };\n\n const handleClose = () => {\n   setAnchorEl(null);\n };\n\n return (\n   <div className={classes.root}>\n\n     <AppBar position=\"fixed\" className={classes.headColor} >\n       <Toolbar>\n         {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n           <MenuIcon />\n         </IconButton> */}\n         <Typography variant=\"h5\" className={classes.title}>\n           LOGO\n         </Typography>\n         {auth && (\n           <div>\n             <IconButton\n               aria-label=\"account of current user\"\n               aria-controls=\"menu-appbar\"\n               aria-haspopup=\"true\"\n               onClick={handleMenu}\n               color=\"inherit\"\n             >\n               <AccountCircle />\n             </IconButton>\n             <Menu\n               id=\"menu-appbar\"\n               anchorEl={anchorEl}\n               anchorOrigin={{\n                 vertical: 'top',\n                 horizontal: 'right',\n               }}\n               keepMounted\n               transformOrigin={{\n                 vertical: 'top',\n                 horizontal: 'right',\n               }}\n               open={open}\n               onClose={handleClose}\n             >\n               <MenuItem onClick={handleClose}>Profile</MenuItem>\n               <MenuItem onClick={handleClose}>My account</MenuItem>\n               <MenuItem >\n                 <Link to=\"/\" style={{textDecoration:\"none\",color:\"black\"}}>\n                     Logout\n                 </Link>\n               </MenuItem>\n             </Menu>\n           </div>\n         )}\n       </Toolbar>\n     </AppBar>\n   </div>\n );\n}\nexport default Header;","D:\\project-ecqv\\ecqv-master\\src\\components\\Sider.js",[],"D:\\project-ecqv\\ecqv-master\\src\\components\\ListItems.js",[],"D:\\project-ecqv\\ecqv-master\\src\\pages\\Mainbar.js",[],"D:\\project-ecqv\\ecqv-master\\src\\pages\\OrderPage.js",[],"D:\\project-ecqv\\ecqv-master\\src\\pages\\Reports.js",[],"D:\\project-ecqv\\ecqv-master\\src\\pages\\Deposits.js",[],"D:\\project-ecqv\\ecqv-master\\src\\pages\\Orders.js",[],"D:\\project-ecqv\\ecqv-master\\src\\pages\\Title.js",[],"D:\\project-ecqv\\ecqv-master\\src\\pages\\Admin\\AdminPage.js",[],"D:\\project-ecqv\\ecqv-master\\src\\pages\\AdminLogin.js",[],"D:\\project-ecqv\\ecqv-master\\src\\pages\\Admin\\AdminSider.js",[],"D:\\project-ecqv\\ecqv-master\\src\\pages\\Admin\\userManagement.js",[],"D:\\project-ecqv\\ecqv-master\\src\\pages\\Admin\\UserManagement.js",[],"D:\\project-ecqv\\ecqv-master\\src\\pages\\Admin\\AdminMainbar.js",[],"D:\\project-ecqv\\ecqv-master\\src\\pages\\Admin\\UserList.js",["219"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Toolbar,\r\n  Typography,\r\n  Paper,\r\n  Checkbox,\r\n  IconButton,\r\n  Tooltip,\r\n  FormControlLabel,\r\n  Switch\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nfunction createData(name, calories, fat, carbs, protein,empid) {\r\n  return { name, calories, fat, carbs, protein ,empid};\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3,5),\r\n  createData('Donut', 452, 25.0, 51, 4.9,4),\r\n  createData('Eclair', 262, 16.0, 24, 6.0,3),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0,7),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9,6),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.55,5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3,2),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0,2),\r\n  createData('KitKat', 518, 26.0, 65, 7.0,7),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0,3),\r\n  createData('Marshmallow', 318, 0, 81, 2.0,5),\r\n  createData('Nougat', 360, 19.0, 9, 37.0,6),\r\n  createData('Oreo', 437, 18.0, 63, 4.0,8),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'User id' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'FirstName' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'LastName' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Emailid' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Departmentid' },\r\n  { id: 'empid', numeric: true, disablePadding: false, label: 'Employeeid' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.primary.main,\r\n          backgroundColor: lighten(theme.palette.primary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.primary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {(numSelected > 0 && numSelected <= 1)? (\r\n        <Typography className={classes.title} color=\"primary\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"p\" id=\"tableTitle\" component=\"div\">\r\n          Only 1 user can be selected at once \r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n\r\n        <Typography style={{display:\"flex\",margin:\"1rem\"}}>\r\n            <Button variant=\"contained\" color=\"primary\">Edit</Button>\r\n            <Button variant=\"contained\" color=\"primary\">Delete</Button>\r\n        </Typography>\r\n        // <Tooltip title=\"Delete\">\r\n        //   <IconButton aria-label=\"delete\">\r\n        //     <Button variant=\"contained\" color=\"primary\">Edit</Button>\r\n        //     <Button variant=\"contained\" color=\"primary\">Delete</Button>\r\n        //   </IconButton>\r\n        // </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function UserList() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      <TableCell align=\"right\">{row.empid}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",["220","221"],"D:\\project-ecqv\\ecqv-master\\src\\pages\\Admin\\AddUser.js",[],"D:\\project-ecqv\\ecqv-master\\src\\pages\\Admin\\ModifyLogin.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\index.js",[],["222","223"],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\App.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\reportWebVitals.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\data\\ApolloClient.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Login.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\AdminPage.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\LandingPage.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\components\\Header.js",["224"],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\AdminLogin.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\AdminMainbar.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\OrderPage.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Mainbar.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\AdminSider.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\components\\Sider.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Reports.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Deposits.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\UserManagement.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Orders.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\components\\ListItems.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Title.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\AddUser.js",["225","226"],"import React, { useState } from 'react';\nimport {\n    makeStyles,\n    Button,\n    Dialog,\n    DialogContent,\n    Grid,\n    TextField,\n    Typography,\n    Select,\n    MenuItem,\n    InputLabel,\n    FormControl,\n} from '@material-ui/core';\nimport {Get_All_Departments, INSERT_NEW_USER} from '../../data/queries';\nimport { useQuery, useMutation } from '@apollo/client'; \n\n\nconst useStyles = makeStyles((theme) => ({\n\n   paper:{\n    margin: theme.spacing(2,1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    maxWidth:\"50vw\",\n   },\n   form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(3),\n  },\n  formControl: {\n   // margin: theme.spacing(1),\n    minWidth: 260,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  }));\n\nfunction AddUser({handleClose,open}) {\n    const classes = useStyles();\n    const [selecteddept, setSelecteddept] = useState(0);\n    const [userdata, setUserData] = useState({firstName:\"\",lastName:\"\",Email:\"\",UserId:\"\",EmployeeId:\"\"})\n    const { loading, error, data } = useQuery(Get_All_Departments);\n    let departments = [];\n    if(data){\n        console.log(\"departments\");\n        departments = data.Department\n        console.log(departments);\n    }\n    const [insertUser] = useMutation(INSERT_NEW_USER);\n\n    \n  const handledeptChange = (event) => {\n      event.preventDefault();\n      console.log(event.target.value);\n    setSelecteddept(event.target.value);\n  };\n\n  const submitData = (event)=>{\nevent.preventDefault();\nconsole.log(userdata);\ninsertUser({variables:{CreatedUser:\"admin\",DepartmentId:selecteddept,EmailId:userdata.Email,EmployeeId:userdata.EmployeeId,\nFirstName:userdata.firstName,LastName:userdata.lastName,Password:\"abcd\",UserId:userdata.UserId}});\ncancelData();\nalert(\"user added successfully, refresh to see new user data\");\n  };\n\n  const cancelData = () =>{\n   \nsetUserData({firstName:\"\",lastName:\"\",Email:\"\",UserId:\"\",EmployeeId:\"\"});\nsetSelecteddept(0);\n  handleClose();\n  \n\n  }\n    return(\n    <>\n        <Dialog open={open} onClose={handleClose} >\n            <DialogContent className={classes.paper}>\n                <Typography variant=\"h5\">\n                    Add User\n                </Typography>\n                <form className={classes.form} autoComplete=\"off\" noValidate>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6} lg={6}>\n                            <TextField \n                            label=\"First Name\" \n                            type=\"text\"\n                            variant=\"outlined\"\n                            value={userdata.firstName}\n                            onChange={e=>setUserData({...userdata, firstName: e.target.value})}\n                            fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6} lg={6}>\n                            <TextField \n                            label=\"Last Name\" \n                            type=\"text\"\n                            variant=\"outlined\"\n                            value={userdata.lastName}\n                            onChange={e=>setUserData({...userdata, lastName: e.target.value})}\n                            fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6} lg={6}> \n                            <TextField \n                            label=\"Email Address\" \n                            type=\"email\"\n                            variant=\"outlined\"\n                            value={userdata.Email}\n                            onChange={e=>setUserData({...userdata, Email: e.target.value})}\n                            fullWidth  \n                           />\n                        </Grid>\n                        \n                        <Grid item xs={12} sm={6} lg={6} > \n                            <TextField \n                            label=\"User Id\" \n                            type=\"text\"\n                            variant=\"outlined\"\n                            value={userdata.UserId}\n                            onChange={e=>setUserData({...userdata, UserId: e.target.value})}\n                            fullWidth  \n                           />\n                        </Grid>\n                        <Grid item xs={12} sm={6} lg={6}>\n                            <TextField \n                            label=\"Employee Id\" \n                            type=\"text\"\n                            variant=\"outlined\"\n                            value={userdata.EmployeeId}\n                            onChange={e=>setUserData({...userdata, EmployeeId: e.target.value})}\n                            fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6} lg={6}> \n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-outlined-label\">Department</InputLabel>\n                        <Select\n          labelId=\"department-select-label\"\n          id=\"department-select\"\n          value={selecteddept}\n          onChange={handledeptChange}\n          fullWidth\n        >\n            {\n                departments.map((dept,index)=>\n                <MenuItem value={dept.Id} key={index}>{dept.DepartmentName}</MenuItem>\n                \n                )\n            }\n        </Select>\n        </FormControl>\n                        </Grid>\n\n                        <Grid item xs={12}></Grid>\n\n                        <Grid item xs={12} sm={12} lg={6}>\n                            <Button color=\"primary\" onClick={submitData} variant='contained'> submit</Button>\n                            </Grid>\n\n                        <Grid item xs={12} sm={12} lg={6}>\n                            <Button color=\"primary\" onClick={cancelData} variant='contained'> Cancel</Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </DialogContent>\n        </Dialog>\n    </>\n    )\n}\n\nexport default AddUser\n\n\n            //                  <Grid Container>\n            //                     <Grid item xs={4}>\n            //                         <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\n            //                             Cancel\n            //                         </Button>\n            //                     </Grid>\n\n            //                     <Grid item xs={4}>    \n            //                         <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\n            //                             Submit\n            //                         </Button>\n            //                     </Grid>\n            //                 </Grid>\n","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\UserList.js",["227","228","229","230","231"],"import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport {Get_All_ActiveUsers} from '../../data/queries';\nimport { useQuery } from '@apollo/client';\nimport EditUser from './EditUser';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  Checkbox,\n  IconButton,\n  Tooltip,\n  FormControlLabel,\n  Switch\n} from '@material-ui/core';\n// import DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'UserId', numeric: false, disablePadding: false, label: 'User id' },\n  { id: 'FirstName', numeric: false, disablePadding: false, label: 'FirstName' },\n  { id: 'LastName', numeric: false, disablePadding: false, label: 'LastName' },\n  { id: 'EmailId', numeric: false, disablePadding: false, label: 'Emailid' },\n  { id: 'Department.DepartmentName', numeric: false, disablePadding: false, label: 'Department' },\n  { id: 'EmployeeId', numeric: false, disablePadding: false, label: 'Employeeid' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          {/* <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          /> */}\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.primary.main,\n          backgroundColor: lighten(theme.palette.primary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.primary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected,selecteduser } = props;\n  // const {selecteduser} = props.selecteduser;\n  const [open,setOpen] = useState(false);\n\n  const handleEditClickOpen = () =>{\n    alert(selecteduser);\n    console.log(selecteduser);\n    setOpen(true);\n  }\n  const handleEditClose = () =>{\n    setOpen(false);\n  }\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {(numSelected > 0 && numSelected <= 1)? (\n        <Typography className={classes.title} color=\"primary\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"p\" id=\"tableTitle\" component=\"div\">\n          Only 1 user can be selected at once \n        </Typography>\n      )}\n\n      {numSelected ===1 ? (\n\n        <Typography style={{display:\"flex\",margin:\"1rem\"}}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleEditClickOpen}>Edit User</Button>\n            <EditUser open={open} handleClose={handleEditClose} selectedUser={selecteduser}/>\n            <Button variant=\"contained\" color=\"primary\">Delete</Button>\n        </Typography>\n        // <Tooltip title=\"Delete\">\n        //   <IconButton aria-label=\"delete\">\n        //     <Button variant=\"contained\" color=\"primary\">Edit</Button>\n        //     <Button variant=\"contained\" color=\"primary\">Delete</Button>\n        //   </IconButton>\n        // </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  selecteduser: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function UserList() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('UserId');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { loading, error, data } = useQuery(Get_All_ActiveUsers);\n  let rows=[];\n  console.log(\"defined rows\");\n  if(data)\n  {\n    console.log(\"inside data\");\n    rows = data.UserProfile;\n    console.log(rows);\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.UserId);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    alert(selected);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  \n\n  const isSelected = (UserId) => selected.indexOf(UserId) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} selecteduser={selected[0]}/>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.UserId);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.UserId)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.UserId}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.UserId}\n                      </TableCell>\n                      <TableCell align=\"left\" >{row.FirstName}</TableCell>\n                      <TableCell align=\"left\">{row.LastName}</TableCell>\n                      <TableCell align=\"left\">{row.EmailId}</TableCell>\n                      <TableCell align=\"left\">{row.Department.DepartmentName}</TableCell>\n                      <TableCell align=\"left\">{row.EmployeeId}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\ModifyLogin.js",["232","233","234","235","236","237","238"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport {Get_All_Users} from '../../data/queries';\nimport { useQuery } from '@apollo/client';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  Checkbox,\n  IconButton,\n  Tooltip,\n  FormControlLabel,\n  Switch\n\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\n// function createData(name, calories, fat, emailid,empid,status,flag) {\n//   return { name, calories, fat, emailid,empid,status,flag};\n// }\n\n// const rows = [\n//   createData('Tesla Motars', 'Elon', 'musk', 'elonusk@gmail.com', 4.3,\"completed\",\"pending\"),\n//   createData('US President', 'Joe', 'biden', 'president@gmail.com', 4.9,\"pending\",\"pending\"),\n//   createData('Apple CEO', 'Tim', 'Cook', 'apple@gmail.com', 6.0,\"completed\",\"pending\"),\n//   createData('Facebook Founder', 'Mark', 'Zugerburg', 'facebook@gmail.com', 4.0,\"completed\",\"completed\"),\n//   createData('Tata Group', 'Ratan', 'Tata', 'tatagroup@gmail.com', 3.9,\"completed\",\"completed\"),\n//   createData('Reliance Ind', 'Mukesh', 'Ambani', 'mukeshambani@gmail.com', 6.55,\"pending\",\"completed\"),\n//   createData('India PM', 'Narendra','Modi', 'narendramodi@gmail.com', 4.3,\"pending\",\"completed\"),\n//   createData('Adani Group', 'Gowtham', 'Adani', 'adani@gmail.com', 0.0,\"completed\",\"completed\"),\n//   createData('KitKat', 518, 26.0, 'samplemail@gmail.com', 7.0,\"completed\",\"pending\"),\n//   createData('Lollipop', 392, 0.2, 'samplemail@gmail.com', 0.0,\"pending\",\"pending\"),\n//   createData('Marshmallow', 318, 0, 'samplemail@gmail.com', 2.0,\"pending\",\"pending\"),\n//   createData('Nougat', 360, 19.0, 'samplemail@gmail.com', 37.0,\"completed\",\"pending\"),\n//   createData('Oreo', 437, 18.0, 'samplemail@gmail.com', 4.0,\"pending\",\"completed\"),\n// ];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'UserId', numeric: false, disablePadding: false, label: 'User id' },\n  { id: 'FirstName', numeric: false, disablePadding: false, label: 'FirstName' },\n  { id: 'LastName', numeric: false, disablePadding: false, label: 'LastName' },\n  { id: 'EmailId', numeric: false, disablePadding: false, label: 'Emailid' },\n  { id: 'EmployeeId', numeric: false, disablePadding: false, label: 'Employeeid' },\n  { id: 'ActiveUser', numeric: false, disablePadding: false, label: 'Status' },\n  { id: 'TempPwdFlag', numeric: false, disablePadding: false, label: 'TempFlagStatus' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          {/* <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          /> */}\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : '0 .5rem'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.primary.main,\n          backgroundColor: lighten(theme.palette.primary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.primary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {(numSelected > 0 && numSelected <= 1)? (\n        <Typography className={classes.title} color=\"primary\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"p\" id=\"tableTitle\" component=\"div\">\n          Only 1 user can be selected at once \n        </Typography>\n      )}\n\n      {numSelected ==1 ? (\n        <Typography style={{display:\"flex\",margin:\"1rem\"}}>\n        <Button variant=\"contained\" color=\"primary\">Recover UserId</Button>\n        <Button variant=\"contained\" color=\"primary\">Reset Password</Button>\n        <Button variant=\"contained\" color=\"primary\">Activate/Deactivate User</Button>\n    </Typography>\n        // <Tooltip title=\"Delete\">\n        //   <IconButton aria-label=\"delete\">\n        //     <DeleteIcon />\n        //   </IconButton>\n        // </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function UserList() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('UserId');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { loading, error, data } = useQuery(Get_All_Users);\n  let rows=[];\n  console.log(\"defined rows\");\n  if(data)\n  {\n    console.log(\"inside data\");\n    rows = data.UserProfile;\n    console.log(rows);\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.UserId);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (UserId) => selected.indexOf(UserId) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.UserId);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.UserId)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.UserId}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none \">\n                        {row.UserId}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.FirstName}</TableCell>\n                      <TableCell align=\"left\">{row.LastName}</TableCell>\n                      <TableCell align=\"left\">{row.EmailId}</TableCell>\n                      <TableCell align=\"left\">{row.EmployeeId}</TableCell>\n                      <TableCell align=\"left\">{(row.UserLogin.ActiveUser?'Active':'InActive')}</TableCell>\n                      <TableCell align=\"left\">{(row.UserLogin.TempPwdFlag?'Yes':'No')}</TableCell>\n\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\data\\queries.js",[],"E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\RecoverUser.js",["239","240","241","242","243","244"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport {Get_Deleted_Users} from '../../data/queries';\r\nimport { useQuery } from '@apollo/client';\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Toolbar,\r\n  Typography,\r\n  Paper,\r\n  Checkbox,\r\n  IconButton,\r\n  Tooltip,\r\n  FormControlLabel,\r\n  Switch\r\n} from '@material-ui/core';\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'UserId', numeric: false, disablePadding: false, label: 'User id' },\r\n  { id: 'FirstName', numeric: false, disablePadding: false, label: 'FirstName' },\r\n  { id: 'LastName', numeric: false, disablePadding: false, label: 'LastName' },\r\n  { id: 'EmailId', numeric: false, disablePadding: false, label: 'Emailid' },\r\n  { id: 'Department.DepartmentName', numeric: false, disablePadding: false, label: 'Department' },\r\n  { id: 'EmployeeId', numeric: false, disablePadding: false, label: 'Employeeid' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          {/* <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          /> */}\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.primary.main,\r\n          backgroundColor: lighten(theme.palette.primary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.primary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {(numSelected > 0 && numSelected <= 1)? (\r\n        <Typography className={classes.title} color=\"primary\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"p\" id=\"tableTitle\" component=\"div\">\r\n          Only 1 user can be selected at once \r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected ==1 ? (\r\n\r\n        <Typography style={{display:\"flex\",margin:\"1rem\"}}>\r\n            <Button variant=\"contained\" color=\"primary\">Edit</Button>\r\n            <Button variant=\"contained\" color=\"primary\">Delete</Button>\r\n        </Typography>\r\n        // <Tooltip title=\"Delete\">\r\n        //   <IconButton aria-label=\"delete\">\r\n        //     <Button variant=\"contained\" color=\"primary\">Edit</Button>\r\n        //     <Button variant=\"contained\" color=\"primary\">Delete</Button>\r\n        //   </IconButton>\r\n        // </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function RecoverUser() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('UserId');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { loading, error, data } = useQuery(Get_Deleted_Users);\r\n  let rows=[];\r\n  console.log(\"defined rows\");\r\n  if(data)\r\n  {\r\n    console.log(\"inside data\");\r\n    rows = data.UserProfile;\r\n    console.log(rows);\r\n  }\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.UserId);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    alert(selected);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (UserId) => selected.indexOf(UserId) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.UserId);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.UserId)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.UserId}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.UserId}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" >{row.FirstName}</TableCell>\r\n                      <TableCell align=\"left\">{row.LastName}</TableCell>\r\n                      <TableCell align=\"left\">{row.EmailId}</TableCell>\r\n                      <TableCell align=\"left\">{row.Department.DepartmentName}</TableCell>\r\n                      <TableCell align=\"left\">{row.EmployeeId}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","E:\\Deepthi Startups\\ECQV\\projects\\udaygit\\ecqv\\src\\pages\\Admin\\EditUser.js",["245","246","247","248"],{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","severity":1,"message":"254","line":43,"column":8,"nodeType":"255","messageId":"256","endLine":43,"endColumn":20},{"ruleId":"253","severity":1,"message":"257","line":24,"column":8,"nodeType":"255","messageId":"256","endLine":24,"endColumn":18},{"ruleId":"249","replacedBy":"258"},{"ruleId":"251","replacedBy":"259"},{"ruleId":"249","replacedBy":"260"},{"ruleId":"251","replacedBy":"261"},{"ruleId":"253","severity":1,"message":"254","line":43,"column":8,"nodeType":"255","messageId":"256","endLine":43,"endColumn":20},{"ruleId":"253","severity":1,"message":"262","line":46,"column":13,"nodeType":"255","messageId":"256","endLine":46,"endColumn":20},{"ruleId":"253","severity":1,"message":"263","line":46,"column":22,"nodeType":"255","messageId":"256","endLine":46,"endColumn":27},{"ruleId":"253","severity":1,"message":"264","line":66,"column":20,"nodeType":"255","messageId":"256","endLine":66,"endColumn":36},{"ruleId":"253","severity":1,"message":"265","line":66,"column":54,"nodeType":"255","messageId":"256","endLine":66,"endColumn":65},{"ruleId":"253","severity":1,"message":"266","line":66,"column":67,"nodeType":"255","messageId":"256","endLine":66,"endColumn":75},{"ruleId":"253","severity":1,"message":"262","line":230,"column":11,"nodeType":"255","messageId":"256","endLine":230,"endColumn":18},{"ruleId":"253","severity":1,"message":"263","line":230,"column":20,"nodeType":"255","messageId":"256","endLine":230,"endColumn":25},{"ruleId":"253","severity":1,"message":"257","line":27,"column":8,"nodeType":"255","messageId":"256","endLine":27,"endColumn":18},{"ruleId":"253","severity":1,"message":"264","line":87,"column":20,"nodeType":"255","messageId":"256","endLine":87,"endColumn":36},{"ruleId":"253","severity":1,"message":"265","line":87,"column":54,"nodeType":"255","messageId":"256","endLine":87,"endColumn":65},{"ruleId":"253","severity":1,"message":"266","line":87,"column":67,"nodeType":"255","messageId":"256","endLine":87,"endColumn":75},{"ruleId":"267","severity":1,"message":"268","line":179,"column":20,"nodeType":"269","messageId":"270","endLine":179,"endColumn":22},{"ruleId":"253","severity":1,"message":"262","line":237,"column":11,"nodeType":"255","messageId":"256","endLine":237,"endColumn":18},{"ruleId":"253","severity":1,"message":"263","line":237,"column":20,"nodeType":"255","messageId":"256","endLine":237,"endColumn":25},{"ruleId":"253","severity":1,"message":"264","line":65,"column":20,"nodeType":"255","messageId":"256","endLine":65,"endColumn":36},{"ruleId":"253","severity":1,"message":"265","line":65,"column":54,"nodeType":"255","messageId":"256","endLine":65,"endColumn":65},{"ruleId":"253","severity":1,"message":"266","line":65,"column":67,"nodeType":"255","messageId":"256","endLine":65,"endColumn":75},{"ruleId":"267","severity":1,"message":"268","line":157,"column":20,"nodeType":"269","messageId":"270","endLine":157,"endColumn":22},{"ruleId":"253","severity":1,"message":"262","line":216,"column":11,"nodeType":"255","messageId":"256","endLine":216,"endColumn":18},{"ruleId":"253","severity":1,"message":"263","line":216,"column":20,"nodeType":"255","messageId":"256","endLine":216,"endColumn":25},{"ruleId":"253","severity":1,"message":"262","line":46,"column":13,"nodeType":"255","messageId":"256","endLine":46,"endColumn":20},{"ruleId":"253","severity":1,"message":"263","line":46,"column":22,"nodeType":"255","messageId":"256","endLine":46,"endColumn":27},{"ruleId":"253","severity":1,"message":"271","line":53,"column":13,"nodeType":"255","messageId":"256","endLine":53,"endColumn":21},{"ruleId":"253","severity":1,"message":"272","line":53,"column":23,"nodeType":"255","messageId":"256","endLine":53,"endColumn":29},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],"no-unused-vars","'handleChange' is assigned a value but never used.","Identifier","unusedVar","'DeleteIcon' is defined but never used.",["273"],["274"],["273"],["274"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'loading1' is assigned a value but never used.","'error1' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]